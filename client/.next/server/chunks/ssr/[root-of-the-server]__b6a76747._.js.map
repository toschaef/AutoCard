{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/ali/Documents/Documents_Ali/HackMidwest/hack-midwest/client/lib/game.ts"],"sourcesContent":["import { Card } from './types';\n\nexport const TIMER_SECONDS = 20;\n\nexport function buildAnswers(card: Card): { text: string; isCorrect: boolean }[] {\n  const allAnswers = [card.correct_answer, ...card.incorrect_answers];\n  const answers = allAnswers.map((text, index) => ({\n    text,\n    isCorrect: index === 0\n  }));\n  \n  // Fisher-Yates shuffle\n  for (let i = answers.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [answers[i], answers[j]] = [answers[j], answers[i]];\n  }\n  \n  return answers;\n}\n\nexport function splitSides<T>(items: T[]): { left: T[]; right: T[] } {\n  const len = items.length;\n  \n  if (len === 2) {\n    return { left: [items[0]], right: [items[1]] };\n  }\n  \n  if (len === 3) {\n    return { left: [items[0], items[1]], right: [items[2]] };\n  }\n  \n  if (len === 4) {\n    return { left: [items[0], items[1]], right: [items[2], items[3]] };\n  }\n  \n  // For other lengths, balance as evenly as possible with left favoring extra\n  const leftCount = Math.ceil(len / 2);\n  return {\n    left: items.slice(0, leftCount),\n    right: items.slice(leftCount)\n  };\n}\n\nexport function classNames(...parts: (string | false | null | undefined)[]): string {\n  return parts.filter(Boolean).join(' ');\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEO,MAAM,gBAAgB;AAEtB,SAAS,aAAa,IAAU;IACrC,MAAM,aAAa;QAAC,KAAK,cAAc;WAAK,KAAK,iBAAiB;KAAC;IACnE,MAAM,UAAU,WAAW,GAAG,CAAC,CAAC,MAAM,QAAU,CAAC;YAC/C;YACA,WAAW,UAAU;QACvB,CAAC;IAED,uBAAuB;IACvB,IAAK,IAAI,IAAI,QAAQ,MAAM,GAAG,GAAG,IAAI,GAAG,IAAK;QAC3C,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC;QAC3C,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,GAAG;YAAC,OAAO,CAAC,EAAE;YAAE,OAAO,CAAC,EAAE;SAAC;IACrD;IAEA,OAAO;AACT;AAEO,SAAS,WAAc,KAAU;IACtC,MAAM,MAAM,MAAM,MAAM;IAExB,IAAI,QAAQ,GAAG;QACb,OAAO;YAAE,MAAM;gBAAC,KAAK,CAAC,EAAE;aAAC;YAAE,OAAO;gBAAC,KAAK,CAAC,EAAE;aAAC;QAAC;IAC/C;IAEA,IAAI,QAAQ,GAAG;QACb,OAAO;YAAE,MAAM;gBAAC,KAAK,CAAC,EAAE;gBAAE,KAAK,CAAC,EAAE;aAAC;YAAE,OAAO;gBAAC,KAAK,CAAC,EAAE;aAAC;QAAC;IACzD;IAEA,IAAI,QAAQ,GAAG;QACb,OAAO;YAAE,MAAM;gBAAC,KAAK,CAAC,EAAE;gBAAE,KAAK,CAAC,EAAE;aAAC;YAAE,OAAO;gBAAC,KAAK,CAAC,EAAE;gBAAE,KAAK,CAAC,EAAE;aAAC;QAAC;IACnE;IAEA,4EAA4E;IAC5E,MAAM,YAAY,KAAK,IAAI,CAAC,MAAM;IAClC,OAAO;QACL,MAAM,MAAM,KAAK,CAAC,GAAG;QACrB,OAAO,MAAM,KAAK,CAAC;IACrB;AACF;AAEO,SAAS,WAAW,GAAG,KAA4C;IACxE,OAAO,MAAM,MAAM,CAAC,SAAS,IAAI,CAAC;AACpC","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/ali/Documents/Documents_Ali/HackMidwest/hack-midwest/client/lib/normalize.ts"],"sourcesContent":["import { Card, CardSet } from './types';\n\ninterface IncomingCard {\n  question: string;\n  correctAnswer: string;\n  incorrectAnswers: string[];\n}\n\ninterface IncomingSet {\n  setName: string;\n  setDescription: string;\n  cards: IncomingCard[];\n}\n\nexport function normalizeIncomingSet(input: unknown): CardSet {\n  // If already a CardSet, return as-is\n  if (isCardSet(input)) {\n    return input;\n  }\n\n  // Check if it's the incoming format\n  if (isIncomingSet(input)) {\n    return {\n      id: generateId(),\n      title: input.setName,\n      topic: input.setDescription,\n      cards: input.cards.map(card => ({\n        id: generateId(),\n        question: card.question,\n        correct_answer: card.correctAnswer,\n        incorrect_answers: card.incorrectAnswers\n      })),\n      created: new Date()\n    };\n  }\n\n  throw new Error('Invalid input format');\n}\n\nfunction isCardSet(input: unknown): input is CardSet {\n  return (\n    typeof input === 'object' &&\n    input !== null &&\n    'id' in input &&\n    'title' in input &&\n    'topic' in input &&\n    'cards' in input &&\n    'created' in input\n  );\n}\n\nfunction isIncomingSet(input: unknown): input is IncomingSet {\n  return (\n    typeof input === 'object' &&\n    input !== null &&\n    'setName' in input &&\n    'setDescription' in input &&\n    'cards' in input &&\n    Array.isArray((input as any).cards)\n  );\n}\n\nfunction generateId(): string {\n  return Math.random().toString(36).substr(2, 9);\n}\n"],"names":[],"mappings":";;;;AAcO,SAAS,qBAAqB,KAAc;IACjD,qCAAqC;IACrC,IAAI,UAAU,QAAQ;QACpB,OAAO;IACT;IAEA,oCAAoC;IACpC,IAAI,cAAc,QAAQ;QACxB,OAAO;YACL,IAAI;YACJ,OAAO,MAAM,OAAO;YACpB,OAAO,MAAM,cAAc;YAC3B,OAAO,MAAM,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,CAAC;oBAC9B,IAAI;oBACJ,UAAU,KAAK,QAAQ;oBACvB,gBAAgB,KAAK,aAAa;oBAClC,mBAAmB,KAAK,gBAAgB;gBAC1C,CAAC;YACD,SAAS,IAAI;QACf;IACF;IAEA,MAAM,IAAI,MAAM;AAClB;AAEA,SAAS,UAAU,KAAc;IAC/B,OACE,OAAO,UAAU,YACjB,UAAU,QACV,QAAQ,SACR,WAAW,SACX,WAAW,SACX,WAAW,SACX,aAAa;AAEjB;AAEA,SAAS,cAAc,KAAc;IACnC,OACE,OAAO,UAAU,YACjB,UAAU,QACV,aAAa,SACb,oBAAoB,SACpB,WAAW,SACX,MAAM,OAAO,CAAC,AAAC,MAAc,KAAK;AAEtC;AAEA,SAAS;IACP,OAAO,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;AAC9C","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///Users/ali/Documents/Documents_Ali/HackMidwest/hack-midwest/client/lib/mockData.ts"],"sourcesContent":["import { CardSet } from './types';\nimport { normalizeIncomingSet } from './normalize';\n\n// Example using the provided C++ JSON through normalizeIncomingSet\nconst cppExample = normalizeIncomingSet({\n  \"setName\": \"C++ Basics\",\n  \"setDescription\": \"Fundamental concepts of the C++ programming language.\",\n  \"cards\": [\n    {\n      \"question\": \"What is the entry point function of a C++ program?\",\n      \"correctAnswer\": \"main()\",\n      \"incorrectAnswers\": [\"start()\", \"run()\", \"execute()\"]\n    },\n    {\n      \"question\": \"Which keyword is used to declare a variable in C++?\",\n      \"correctAnswer\": \"int, char, float, etc.\",\n      \"incorrectAnswers\": [\"var\", \"let\", \"const\"]\n    },\n    {\n      \"question\": \"What does #include do in C++?\",\n      \"correctAnswer\": \"Includes header files\",\n      \"incorrectAnswers\": [\"Declares variables\", \"Defines functions\", \"Creates objects\"]\n    },\n    {\n      \"question\": \"Which operator is used for pointer dereferencing?\",\n      \"correctAnswer\": \"*\",\n      \"incorrectAnswers\": [\"&\", \"->\", \".\"]\n    },\n    {\n      \"question\": \"What is the size of an int in C++?\",\n      \"correctAnswer\": \"4 bytes (typically)\",\n      \"incorrectAnswers\": [\"2 bytes\", \"8 bytes\", \"Depends on compiler\"]\n    }\n  ]\n});\n\n// Update the C++ example to have a stable ID\nconst cppBasicsSet = {\n  ...cppExample,\n  id: \"cpp-basics\"\n};\n\n// Your Sets - 8 items\nexport const yourSets: CardSet[] = [\n  cppBasicsSet,\n  {\n    id: '1',\n    title: 'JavaScript Fundamentals',\n    topic: 'Core JavaScript concepts and syntax',\n    cards: [\n      {\n        id: '1-1',\n        question: 'What is the difference between let and var?',\n        correct_answer: 'let has block scope, var has function scope',\n        incorrect_answers: ['No difference', 'let is faster', 'var is deprecated']\n      }\n    ],\n    created: new Date('2024-01-15')\n  },\n  {\n    id: '2',\n    title: 'React Hooks',\n    topic: 'Modern React development with hooks',\n    cards: [\n      {\n        id: '2-1',\n        question: 'What does useEffect do?',\n        correct_answer: 'Performs side effects in functional components',\n        incorrect_answers: ['Creates components', 'Handles events', 'Manages state']\n      }\n    ],\n    created: new Date('2024-01-20')\n  },\n  {\n    id: '3',\n    title: 'TypeScript Basics',\n    topic: 'Type-safe JavaScript development',\n    cards: [\n      {\n        id: '3-1',\n        question: 'What is a type annotation?',\n        correct_answer: 'Explicit type declaration for variables',\n        incorrect_answers: ['A comment', 'A function', 'A class']\n      }\n    ],\n    created: new Date('2024-01-25')\n  },\n  {\n    id: '4',\n    title: 'CSS Grid Layout',\n    topic: 'Modern CSS layout techniques',\n    cards: [\n      {\n        id: '4-1',\n        question: 'What is CSS Grid?',\n        correct_answer: 'A two-dimensional layout system',\n        incorrect_answers: ['A one-dimensional layout', 'A color scheme', 'A font family']\n      }\n    ],\n    created: new Date('2024-02-01')\n  },\n  {\n    id: '5',\n    title: 'Node.js Backend',\n    topic: 'Server-side JavaScript development',\n    cards: [\n      {\n        id: '5-1',\n        question: 'What is Express.js?',\n        correct_answer: 'A web framework for Node.js',\n        incorrect_answers: ['A database', 'A frontend library', 'A testing framework']\n      }\n    ],\n    created: new Date('2024-02-05')\n  },\n  {\n    id: '6',\n    title: 'Database Design',\n    topic: 'Relational database concepts',\n    cards: [\n      {\n        id: '6-1',\n        question: 'What is a primary key?',\n        correct_answer: 'A unique identifier for table rows',\n        incorrect_answers: ['A foreign key', 'A column name', 'A data type']\n      }\n    ],\n    created: new Date('2024-02-10')\n  },\n  {\n    id: '7',\n    title: 'API Development',\n    topic: 'RESTful API design and implementation',\n    cards: [\n      {\n        id: '7-1',\n        question: 'What does REST stand for?',\n        correct_answer: 'Representational State Transfer',\n        incorrect_answers: ['Remote State Transfer', 'Representative State Transfer', 'Rapid State Transfer']\n      }\n    ],\n    created: new Date('2024-02-15')\n  }\n];\n\n// Recent Sets - 6 items\nexport const recentSets: CardSet[] = [\n  {\n    id: '8',\n    title: 'Python Data Structures',\n    topic: 'Lists, dictionaries, and tuples in Python',\n    cards: [\n      {\n        id: '8-1',\n        question: 'What is a Python list?',\n        correct_answer: 'An ordered, mutable collection',\n        incorrect_answers: ['An unordered collection', 'An immutable collection', 'A key-value pair']\n      }\n    ],\n    created: new Date('2024-02-20')\n  },\n  {\n    id: '9',\n    title: 'Machine Learning Basics',\n    topic: 'Introduction to ML concepts',\n    cards: [\n      {\n        id: '9-1',\n        question: 'What is supervised learning?',\n        correct_answer: 'Learning with labeled training data',\n        incorrect_answers: ['Learning without data', 'Learning with unlabeled data', 'Learning with test data']\n      }\n    ],\n    created: new Date('2024-02-18')\n  },\n  {\n    id: '10',\n    title: 'Docker Containers',\n    topic: 'Containerization and deployment',\n    cards: [\n      {\n        id: '10-1',\n        question: 'What is Docker?',\n        correct_answer: 'A containerization platform',\n        incorrect_answers: ['A database', 'A programming language', 'A web framework']\n      }\n    ],\n    created: new Date('2024-02-16')\n  },\n  {\n    id: '11',\n    title: 'Git Version Control',\n    topic: 'Source code management',\n    cards: [\n      {\n        id: '11-1',\n        question: 'What is a Git commit?',\n        correct_answer: 'A snapshot of changes',\n        incorrect_answers: ['A branch', 'A merge', 'A pull request']\n      }\n    ],\n    created: new Date('2024-02-14')\n  },\n  {\n    id: '12',\n    title: 'AWS Cloud Services',\n    topic: 'Amazon Web Services fundamentals',\n    cards: [\n      {\n        id: '12-1',\n        question: 'What is EC2?',\n        correct_answer: 'Elastic Compute Cloud',\n        incorrect_answers: ['Elastic Container Cloud', 'Elastic Cache Cloud', 'Elastic Content Cloud']\n      }\n    ],\n    created: new Date('2024-02-12')\n  },\n  {\n    id: '13',\n    title: 'GraphQL APIs',\n    topic: 'Query language for APIs',\n    cards: [\n      {\n        id: '13-1',\n        question: 'What is GraphQL?',\n        correct_answer: 'A query language for APIs',\n        incorrect_answers: ['A database', 'A programming language', 'A web framework']\n      }\n    ],\n    created: new Date('2024-02-10')\n  }\n];\n\n// Drafts - 7 items\nexport const draftSets: CardSet[] = [\n  {\n    id: '14',\n    title: 'Vue.js Components',\n    topic: 'Component-based architecture in Vue',\n    cards: [],\n    created: new Date('2024-02-22')\n  },\n  {\n    id: '15',\n    title: 'MongoDB NoSQL',\n    topic: 'Document-based database concepts',\n    cards: [],\n    created: new Date('2024-02-21')\n  },\n  {\n    id: '16',\n    title: 'Redis Caching',\n    topic: 'In-memory data structure store',\n    cards: [],\n    created: new Date('2024-02-20')\n  },\n  {\n    id: '17',\n    title: 'Kubernetes Orchestration',\n    topic: 'Container orchestration platform',\n    cards: [],\n    created: new Date('2024-02-19')\n  },\n  {\n    id: '18',\n    title: 'Microservices Architecture',\n    topic: 'Distributed system design patterns',\n    cards: [],\n    created: new Date('2024-02-18')\n  },\n  {\n    id: '19',\n    title: 'Security Best Practices',\n    topic: 'Web application security fundamentals',\n    cards: [],\n    created: new Date('2024-02-17')\n  },\n  {\n    id: '20',\n    title: 'Performance Optimization',\n    topic: 'Web performance and optimization techniques',\n    cards: [],\n    created: new Date('2024-02-16')\n  }\n];\n\nexport const rows: { title: string; items: CardSet[] }[] = [\n  { title: \"Your Sets\", items: yourSets },\n  { title: \"Recent\", items: recentSets },\n  { title: \"Drafts\", items: draftSets },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///Users/ali/Documents/Documents_Ali/HackMidwest/hack-midwest/client/components/Play/ScoreBar.tsx"],"sourcesContent":["interface ScoreBarProps {\n  current: number;\n  total: number;\n  score: number;\n}\n\nexport default function ScoreBar({ current, total, score }: ScoreBarProps) {\n  const progress = (current / total) * 100;\n  \n  return (\n    <div className=\"w-full mb-8\">\n      <div className=\"flex justify-between items-center mb-2\">\n        <span className=\"text-sm font-medium text-slate-600\">\n          Question {current} of {total}\n        </span>\n        <span className=\"text-sm font-bold text-slate-900\">\n          Score: {score}\n        </span>\n      </div>\n      <div className=\"w-full bg-slate-200 rounded-full h-2\">\n        <div \n          className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n          style={{ width: `${progress}%` }}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAMe,SAAS,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAiB;IACvE,MAAM,WAAW,AAAC,UAAU,QAAS;IAErC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAK,WAAU;;4BAAqC;4BACzC;4BAAQ;4BAAK;;;;;;;kCAEzB,8OAAC;wBAAK,WAAU;;4BAAmC;4BACzC;;;;;;;;;;;;;0BAGZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAO;wBAAE,OAAO,GAAG,SAAS,CAAC,CAAC;oBAAC;;;;;;;;;;;;;;;;;AAKzC","debugId":null}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":["file:///Users/ali/Documents/Documents_Ali/HackMidwest/hack-midwest/client/components/Play/AnswerButton.tsx"],"sourcesContent":["interface AnswerButtonProps {\n  label: string;\n  disabled?: boolean;\n  state?: \"idle\" | \"correct\" | \"wrong\" | \"reveal-correct\";\n  onClick?: () => void;\n  \"data-testid\"?: string;\n}\n\nexport default function AnswerButton({ \n  label, \n  disabled = false, \n  state = \"idle\", \n  onClick,\n  \"data-testid\": dataTestId \n}: AnswerButtonProps) {\n  const baseClasses = \"w-full p-4 text-left font-medium text-black rounded-xl border border-slate-200 bg-white shadow-sm transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-slate-400 min-h-[60px] flex items-center\";\n  \n  const stateClasses = {\n    idle: \"hover:bg-slate-50\",\n    correct: \"bg-green-600 text-white border-green-600\",\n    wrong: \"bg-red-600 text-white border-red-600\",\n    \"reveal-correct\": \"bg-white border-green-600 ring-2 ring-green-600\"\n  };\n  \n  const disabledClasses = disabled ? \"opacity-50 cursor-not-allowed\" : \"cursor-pointer\";\n  \n  return (\n    <button\n      className={`${baseClasses} ${stateClasses[state]} ${disabledClasses}`}\n      disabled={disabled}\n      onClick={onClick}\n      data-testid={dataTestId}\n    >\n      {label}\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAQe,SAAS,aAAa,EACnC,KAAK,EACL,WAAW,KAAK,EAChB,QAAQ,MAAM,EACd,OAAO,EACP,eAAe,UAAU,EACP;IAClB,MAAM,cAAc;IAEpB,MAAM,eAAe;QACnB,MAAM;QACN,SAAS;QACT,OAAO;QACP,kBAAkB;IACpB;IAEA,MAAM,kBAAkB,WAAW,kCAAkC;IAErE,qBACE,8OAAC;QACC,WAAW,GAAG,YAAY,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,iBAAiB;QACrE,UAAU;QACV,SAAS;QACT,eAAa;kBAEZ;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 626, "column": 0}, "map": {"version":3,"sources":["file:///Users/ali/Documents/Documents_Ali/HackMidwest/hack-midwest/client/components/Play/AnswerGrid.tsx"],"sourcesContent":["import AnswerButton from './AnswerButton';\n\ninterface AnswerGridProps {\n  answers: { text: string; isCorrect: boolean }[];\n  locked: boolean;\n  chosenIndex: number | null;\n  onChoose: (idx: number) => void;\n}\n\nexport default function AnswerGrid({ answers, locked, chosenIndex, onChoose }: AnswerGridProps) {\n  const getButtonState = (index: number, isCorrect: boolean) => {\n    if (!locked) return \"idle\";\n    \n    if (isCorrect) return \"correct\";\n    if (index === chosenIndex && !isCorrect) return \"wrong\";\n    if (chosenIndex !== index && isCorrect) return \"reveal-correct\";\n    \n    return \"idle\";\n  };\n\n  // Layout patterns\n  if (answers.length === 4) {\n    return (\n      <div className=\"grid grid-cols-2 gap-4 max-w-4xl mx-auto\">\n        {answers.map((answer, index) => (\n          <AnswerButton\n            key={index}\n            label={answer.text}\n            disabled={locked}\n            state={getButtonState(index, answer.isCorrect)}\n            onClick={() => onChoose(index)}\n            data-testid={`answer-${index}`}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  if (answers.length === 3) {\n    return (\n      <div className=\"max-w-4xl mx-auto space-y-4\">\n        {/* Top row - centered */}\n        <div className=\"grid grid-cols-1 place-items-center\">\n          <div className=\"w-full max-w-md\">\n            <AnswerButton\n              label={answers[0].text}\n              disabled={locked}\n              state={getButtonState(0, answers[0].isCorrect)}\n              onClick={() => onChoose(0)}\n              data-testid=\"answer-0\"\n            />\n          </div>\n        </div>\n        {/* Bottom row - 2 columns */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <AnswerButton\n            label={answers[1].text}\n            disabled={locked}\n            state={getButtonState(1, answers[1].isCorrect)}\n            onClick={() => onChoose(1)}\n            data-testid=\"answer-1\"\n          />\n          <AnswerButton\n            label={answers[2].text}\n            disabled={locked}\n            state={getButtonState(2, answers[2].isCorrect)}\n            onClick={() => onChoose(2)}\n            data-testid=\"answer-2\"\n          />\n        </div>\n      </div>\n    );\n  }\n\n  if (answers.length === 2) {\n    return (\n      <div className=\"grid grid-cols-2 gap-4 max-w-4xl mx-auto\">\n        {answers.map((answer, index) => (\n          <AnswerButton\n            key={index}\n            label={answer.text}\n            disabled={locked}\n            state={getButtonState(index, answer.isCorrect)}\n            onClick={() => onChoose(index)}\n            data-testid={`answer-${index}`}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  // Fallback for other lengths\n  return (\n    <div className=\"grid grid-cols-1 gap-4 max-w-4xl mx-auto\">\n      {answers.map((answer, index) => (\n        <AnswerButton\n          key={index}\n          label={answer.text}\n          disabled={locked}\n          state={getButtonState(index, answer.isCorrect)}\n          onClick={() => onChoose(index)}\n          data-testid={`answer-${index}`}\n        />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAA;;;AASe,SAAS,WAAW,EAAE,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAmB;IAC5F,MAAM,iBAAiB,CAAC,OAAe;QACrC,IAAI,CAAC,QAAQ,OAAO;QAEpB,IAAI,WAAW,OAAO;QACtB,IAAI,UAAU,eAAe,CAAC,WAAW,OAAO;QAChD,IAAI,gBAAgB,SAAS,WAAW,OAAO;QAE/C,OAAO;IACT;IAEA,kBAAkB;IAClB,IAAI,QAAQ,MAAM,KAAK,GAAG;QACxB,qBACE,8OAAC;YAAI,WAAU;sBACZ,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC,8IAAY;oBAEX,OAAO,OAAO,IAAI;oBAClB,UAAU;oBACV,OAAO,eAAe,OAAO,OAAO,SAAS;oBAC7C,SAAS,IAAM,SAAS;oBACxB,eAAa,CAAC,OAAO,EAAE,OAAO;mBALzB;;;;;;;;;;IAUf;IAEA,IAAI,QAAQ,MAAM,KAAK,GAAG;QACxB,qBACE,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,8IAAY;4BACX,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI;4BACtB,UAAU;4BACV,OAAO,eAAe,GAAG,OAAO,CAAC,EAAE,CAAC,SAAS;4BAC7C,SAAS,IAAM,SAAS;4BACxB,eAAY;;;;;;;;;;;;;;;;8BAKlB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,8IAAY;4BACX,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI;4BACtB,UAAU;4BACV,OAAO,eAAe,GAAG,OAAO,CAAC,EAAE,CAAC,SAAS;4BAC7C,SAAS,IAAM,SAAS;4BACxB,eAAY;;;;;;sCAEd,8OAAC,8IAAY;4BACX,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI;4BACtB,UAAU;4BACV,OAAO,eAAe,GAAG,OAAO,CAAC,EAAE,CAAC,SAAS;4BAC7C,SAAS,IAAM,SAAS;4BACxB,eAAY;;;;;;;;;;;;;;;;;;IAKtB;IAEA,IAAI,QAAQ,MAAM,KAAK,GAAG;QACxB,qBACE,8OAAC;YAAI,WAAU;sBACZ,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC,8IAAY;oBAEX,OAAO,OAAO,IAAI;oBAClB,UAAU;oBACV,OAAO,eAAe,OAAO,OAAO,SAAS;oBAC7C,SAAS,IAAM,SAAS;oBACxB,eAAa,CAAC,OAAO,EAAE,OAAO;mBALzB;;;;;;;;;;IAUf;IAEA,6BAA6B;IAC7B,qBACE,8OAAC;QAAI,WAAU;kBACZ,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,8OAAC,8IAAY;gBAEX,OAAO,OAAO,IAAI;gBAClB,UAAU;gBACV,OAAO,eAAe,OAAO,OAAO,SAAS;gBAC7C,SAAS,IAAM,SAAS;gBACxB,eAAa,CAAC,OAAO,EAAE,OAAO;eALzB;;;;;;;;;;AAUf","debugId":null}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":["file:///Users/ali/Documents/Documents_Ali/HackMidwest/hack-midwest/client/components/Play/TimerBadge.tsx"],"sourcesContent":["interface TimerBadgeProps {\n  seconds: number;\n}\n\nexport default function TimerBadge({ seconds }: TimerBadgeProps) {\n  const isLow = seconds <= 5;\n  \n  return (\n    <div className={`w-12 h-12 rounded-full flex items-center justify-center text-sm font-bold transition-colors ${\n      isLow ? 'bg-red-500 text-white' : 'bg-slate-200 text-slate-700'\n    }`}>\n      {seconds}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAIe,SAAS,WAAW,EAAE,OAAO,EAAmB;IAC7D,MAAM,QAAQ,WAAW;IAEzB,qBACE,8OAAC;QAAI,WAAW,CAAC,4FAA4F,EAC3G,QAAQ,0BAA0B,+BAClC;kBACC;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 795, "column": 0}, "map": {"version":3,"sources":["file:///Users/ali/Documents/Documents_Ali/HackMidwest/hack-midwest/client/components/Play/SubmitCounter.tsx"],"sourcesContent":["interface SubmitCounterProps {\n  count: number;\n}\n\nexport default function SubmitCounter({ count }: SubmitCounterProps) {\n  return (\n    <div className=\"w-12 h-12 rounded-full bg-slate-200 text-slate-700 flex items-center justify-center text-sm font-bold\">\n      {count}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAIe,SAAS,cAAc,EAAE,KAAK,EAAsB;IACjE,qBACE,8OAAC;QAAI,WAAU;kBACZ;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"sources":["file:///Users/ali/Documents/Documents_Ali/HackMidwest/hack-midwest/client/components/Play/QuestionBox.tsx"],"sourcesContent":["interface QuestionBoxProps {\n  text: string;\n}\n\nexport default function QuestionBox({ text }: QuestionBoxProps) {\n  return (\n    <div className=\"rounded-xl border border-slate-200 bg-white shadow-sm p-6 md:p-8\">\n      <h1 className=\"text-2xl md:text-3xl font-semibold text-center text-slate-900\">\n        {text}\n      </h1>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAIe,SAAS,YAAY,EAAE,IAAI,EAAoB;IAC5D,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAG,WAAU;sBACX;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":["file:///Users/ali/Documents/Documents_Ali/HackMidwest/hack-midwest/client/app/play/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useMemo, useEffect } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { CardSet } from '../../../lib/types';\nimport { buildAnswers, TIMER_SECONDS } from '../../../lib/game';\nimport { yourSets, recentSets, draftSets } from '../../../lib/mockData';\nimport ScoreBar from '../../../components/Play/ScoreBar';\nimport AnswerGrid from '../../../components/Play/AnswerGrid';\nimport TimerBadge from '../../../components/Play/TimerBadge';\nimport SubmitCounter from '../../../components/Play/SubmitCounter';\nimport QuestionBox from '../../../components/Play/QuestionBox';\n\nexport default function PlayPage() {\n  const params = useParams();\n  const router = useRouter();\n  const setId = params.id as string;\n  \n  // Find the card set by ID, fallback to cpp-basics\n  const allSets = [...yourSets, ...recentSets, ...draftSets];\n  const cardSet = allSets.find(set => set.id === setId) || \n    allSets.find(set => set.id === 'cpp-basics') || \n    allSets[0];\n  \n  const [qIndex, setQIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [locked, setLocked] = useState(false);\n  const [chosenIndex, setChosenIndex] = useState<number | null>(null);\n  const [timeLeft, setTimeLeft] = useState(TIMER_SECONDS);\n  const [submitCount, setSubmitCount] = useState(0);\n  \n  const currentCard = cardSet.cards[qIndex];\n  const answers = useMemo(() => buildAnswers(currentCard), [currentCard]);\n\n  // Timer effect\n  useEffect(() => {\n    if (locked || qIndex === -1) return;\n    \n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          // Timer expired - auto-lock as incorrect\n          setLocked(true);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [locked, qIndex]);\n\n  // Reset timer and submit count on new question\n  useEffect(() => {\n    if (qIndex >= 0) {\n      setTimeLeft(TIMER_SECONDS);\n      setSubmitCount(0);\n      setLocked(false);\n      setChosenIndex(null);\n    }\n  }, [qIndex]);\n  \n  const handleChoose = (index: number) => {\n    if (locked) return;\n    \n    // If clicking the same answer, deselect it\n    if (chosenIndex === index) {\n      setChosenIndex(null);\n      setSubmitCount(0);\n      return;\n    }\n    \n    // Otherwise, select the new answer\n    setChosenIndex(index);\n    setSubmitCount(1);\n  };\n  \n  const handleNext = () => {\n    if (chosenIndex === null && !locked) return; // Must have selected an answer or timer expired\n    \n    // Lock the question and show results\n    setLocked(true);\n    \n    // Add score if correct\n    if (chosenIndex !== null && answers[chosenIndex].isCorrect) {\n      setScore(prev => prev + 100);\n    }\n    \n    // Auto-advance after a short delay to show the correct answer\n    setTimeout(() => {\n      if (qIndex < cardSet.cards.length - 1) {\n        setQIndex(prev => prev + 1);\n      } else {\n        // Show results\n        setQIndex(-1);\n      }\n    }, 2000); // 2 second delay to show correct answer\n  };\n\n  const handlePlayAgain = () => {\n    setQIndex(0);\n    setScore(0);\n    setLocked(false);\n    setChosenIndex(null);\n    setTimeLeft(TIMER_SECONDS);\n    setSubmitCount(0);\n  };\n  \n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if ((e.key === 'Enter' || e.key === ' ') && (locked || chosenIndex !== null) && qIndex >= 0) {\n      handleNext();\n    }\n  };\n  \n  // Results screen\n  if (qIndex === -1) {\n    return (\n      <div className=\"min-h-screen bg-slate-50 flex items-center justify-center p-4\">\n        <div className=\"bg-white rounded-xl border border-slate-200 shadow-sm p-8 max-w-md w-full text-center\">\n          <h1 className=\"text-3xl font-bold text-slate-900 mb-4\">Quiz Complete!</h1>\n          <div className=\"text-6xl font-bold text-slate-900 mb-6\">{score}</div>\n          <p className=\"text-lg text-slate-600 mb-8\">Final Score</p>\n          <div className=\"space-y-4\">\n            <button\n              onClick={handlePlayAgain}\n              className=\"w-full bg-slate-900 hover:bg-slate-800 text-white font-medium px-6 py-3 rounded-xl transition-colors focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2\"\n            >\n              Play Again\n            </button>\n            <Link\n              href=\"/dashboard\"\n              className=\"inline-block w-full border border-slate-300 hover:bg-slate-50 text-slate-700 font-medium px-6 py-3 rounded-xl transition-colors focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2\"\n            >\n              Home\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"min-h-screen bg-slate-50 p-4 md:p-8\" onKeyDown={handleKeyPress} tabIndex={0}>\n      <div className=\"max-w-4xl mx-auto\">\n        <ScoreBar \n          current={qIndex + 1} \n          total={cardSet.cards.length} \n          score={score} \n        />\n        \n        {/* Question with side badges */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <TimerBadge seconds={timeLeft} />\n          <div className=\"flex-1 mx-6\">\n            <QuestionBox text={currentCard.question} />\n          </div>\n          <SubmitCounter count={submitCount} />\n        </div>\n        \n        <AnswerGrid\n          answers={answers}\n          locked={locked}\n          chosenIndex={chosenIndex}\n          onChoose={handleChoose}\n        />\n        \n        <div className=\"mt-8 text-center space-y-6\">\n          {!locked && chosenIndex === null && (\n            <p className=\"text-slate-500\">Choose an answer...</p>\n          )}\n          {(locked || chosenIndex !== null) && (\n            <button\n              onClick={handleNext}\n              className=\"bg-slate-900 hover:bg-slate-800 text-white font-medium px-8 py-3 rounded-xl transition-colors focus:outline-none focus:ring-2 focus:ring-slate-400 focus:ring-offset-2\"\n            >\n              {qIndex < cardSet.cards.length - 1 ? 'Next' : 'See Results'}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}